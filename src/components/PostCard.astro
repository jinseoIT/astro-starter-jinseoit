---
import type { CollectionEntry } from "astro:content";

interface Props {
  post: CollectionEntry<"posts">;
}

const { post } = Astro.props;
---

<li class="post-item group" data-tags={post.data.tags?.join(",") || ""}>
  <a
    href={`/posts/${post.id}`}
    class="hover:bg-theme-hover-bg -m-2 flex items-start gap-6 rounded-lg p-2 no-underline transition-all duration-300 ease-in-out"
  >
    <div
      class="bg-theme-bg-secondary relative h-[188px] w-[282px] flex-shrink-0 overflow-hidden rounded-xl"
    >
      <!-- 스켈레톤 로딩 -->
      <div
        class="skeleton-loader absolute inset-0 rounded-xl"
        id={`skeleton-${post.id}`}
      >
      </div>

      <img
        src={post.data.image}
        alt={post.data.title}
        class="h-full w-full rounded-xl object-cover"
        loading="lazy"
        decoding="async"
        id={`img-${post.id}`}
        style="opacity: 0;"
      />
    </div>
    <div class="flex-1">
      {
        post.data.tags && post.data.tags.length > 0 && (
          <ul class="flex flex-wrap gap-2 py-3">
            {post.data.tags.map((tag) => (
              <li class="bg-theme-bg-secondary text-primary block rounded-xl px-2 py-0.5 text-xs font-normal">{`#${tag}`}</li>
            ))}
          </ul>
        )
      }
      <h2
        class="post-title text-theme-primary mb-2 line-clamp-2 text-[22px] font-medium leading-8 -tracking-[0.2px] transition-colors duration-300"
      >
        {post.data.title}
      </h2>
      <p
        class="text-theme-secondary mb-2 line-clamp-2 text-sm font-normal leading-[22px] -tracking-[0.1px]"
      >
        {post.data.description}
      </p>
      <time
        class="text-theme-muted inline-block text-sm font-normal leading-[22px] -tracking-[0.1px]"
      >
        {
          new Date(post.data.published).toLocaleDateString("ko-KR", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }
      </time>
    </div>
  </a>
</li>

<style>
  /* line-clamp 유틸리티 */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* 스켈레톤 로딩 애니메이션 */
  .skeleton-loader {
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
  }

  @keyframes loading {
    0% {
      background-position: 200% 0;
    }
    100% {
      background-position: -200% 0;
    }
  }

  /* 다크모드 스켈레톤 */
  @media (prefers-color-scheme: dark) {
    .skeleton-loader {
      background: linear-gradient(90deg, #2a2a2a 25%, #3a3a3a 50%, #2a2a2a 75%);
    }
  }

  /* 이미지 컨테이너 최적화 */
  .post-item .flex-shrink-0 {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
  }

  /* 이미지 애니메이션 최적화 */
  .post-item img {
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
  }

  /* 모바일 반응형 */
  @media screen and (max-width: 768px) {
    .post-item a {
      flex-direction: column;
      gap: 12px;
    }
    .post-item .flex-shrink-0 {
      width: 100%;
      max-width: 500px;
      height: auto;
      aspect-ratio: 3/2;
    }
  }

  /* Title hover 효과 */
  .post-item:hover .post-title {
    color: var(--primary-color) !important;
  }
</style>
